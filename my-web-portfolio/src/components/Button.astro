---
interface Props {
    title?: string;
    link?: string;
    variant?: 'primary' | 'accent';
    newTab?: boolean;
    className?: string;
}

const {
    title = "Button",
    link,
    variant = 'primary',
    newTab = false,
    className = '',
} = Astro.props;

const Element = link ? 'a' : 'button';

---

<Element
    href={link}
    target={newTab ? '_blank' : undefined}
    rel={newTab ? "noopener noreferrer" : undefined}
    class:list={[
        'btn',
        `btn--${variant}`,
        className
    ]}
>
    {title}
</Element>

<style>
    .btn {
        display: inline-block;
        border: none;
        border-radius: 17.5px;
        padding: 0.65em 2.75em;
        font-size: 0.75rem;
        letter-spacing: 0.5px;
        text-decoration: none;
        cursor: pointer;
        transition: all 0.2s ease;
    }
    .btn--accent {
        background: none;
        border: 1px solid white;
        color: white;
    }
    .btn--accent:hover {
        background-color: rgba(var(--light-blue), 0.5);
    }
    .btn--primary {
        color: white;
        background-color: rgb(var(--light-blue));
        font-weight: 600;
    }
    .btn--primary:hover {
        background-color: rgba(var(--light-blue), 0.7);
    }
</style>