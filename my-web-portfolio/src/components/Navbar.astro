---
import Image from 'astro/components/Image.astro';
import Button from './Button.astro';
import { Icon } from 'astro-icon/components';

interface Props {
    links?: string[];
}

const {
    links=["", "Projects", "About"], 
} = Astro.props as Props;

const mobileLinks = [
    {
        dataName: "mobile-link",
        link: "/",
        name: "Home"
    },
    {
        dataName: "mobile-link",
        link: "/projects",
        name: "Projects"
    },
    {
        dataName: "mobile-link",
        link: "/about",
        name: "About"
    },
    {
        dataName: "mobile-link",
        link: "/contact",
        name: "Contact"
    },
]

// Images
import KeaninCupidoLogo from '../../public/logo.svg';

const pathName = Astro.url.pathname;
---

<nav class="navbar">
    <div class="circle_image">
        <a href={'/'}>
            <Image 
                loading="eager"
                src={KeaninCupidoLogo}
                alt={"logo"}
                width={32}
                height={32}
            />
        </a>
    </div>
    <ul class="links">
        {
            links.map(link => (
                <li class=`${pathName.split('/')[1] == link.toLowerCase() || pathName == "" ? 'highlighted_page' : ''}`>
                    <a href={`/${link.toLowerCase()}`}>{link === "" ? "Home" : link}</a>
                </li>
            ))
        }
    </ul>
    <div class="contact-button">
        <Button 
            title="Contact"
            link="/contact"
            variant='primary'
            newTab={false}
        />
    </div>

    <!-- ===== Mobile Menu =====-->
    <div class="mobile-menu">
        <button id="openBtn" type="button" class="btn-mobile-menu text-[2rem]">
            <Icon class="icon hover:opacity-60" name=`system-uicons:drag` />
        </button>
        <nav class="mobile-menu-slide" id="mobile-menu-slide">
            <button id="closeBtn" type="button" class="btn-mobile-menu text-[3rem]">
                <Icon class="icon  hover:opacity-60" name=`system-uicons:close` />
            </button>
            <div class="mobile-links">
                <ul>
                    {
                        mobileLinks.map(link => {
                            return (
                                <li>
                                    <a href={link.link} data-name={link.dataName} id={link.dataName}>{link.name}</a>
                                </li>
                            )
                        })
                    }
                </ul>
            </div>
        </nav>
    </div>

</nav>

<style>
    .navbar {
        width: 100%;
        height: 85px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin: 0 auto;
        background-color: rgba(59, 148, 255, 0.05);
        /* box-shadow: inset -15px -20px 70px -22px rgba(59, 148, 255, 0.075); */
        border-radius: 8px;
        padding: 1em 2.25em;
        position: relative;
        z-index: 100;
        transition: all 0.3s ease;
        
        .links {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: center;
            gap: 2.5em;
            font-size: 1rem;

            li {
                &:hover {
                    opacity: 0.8;
                }
            }
            
            li.highlighted_page {
                font-weight: 600;
                color: rgb(var(--light-blue-navbar));
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                position: relative;
                transition: all 0.2s ease;
                &:not(.highlighted_page) {
                    transition: all 0.2s ease;
                    &:hover {
                        transform: translateY(-2px);
                        color: rgb(var(--very-light-blue));
                    }
                }
                &:after {
                        content: "";
                        display: inline-block;
                        width: 50px;
                        height: 2px;
                        background: linear-gradient(90deg, rgba(100, 170, 255, 0) 0%, rgba(100, 170, 255, 0.8) 50%, rgba(100, 170, 255, 0) 100%);
                        position: absolute;
                        bottom: -0.563em;
                }
            }
        }

        /* Mobile */
        .mobile-menu {
            display: none;
        }

        .mobile-menu-slide {
            position: fixed;
            inset: 0;
            width: 100%;
            height: 0;
            background-color: rgb(0, 32, 72);
            color: white;
            font-size: 3rem;
            overflow: hidden;
            z-index: 101;
            line-height: 1;
            will-change: transform;
            transition: all 0.6s ease;
            padding: 0 52px 0 42px;
            letter-spacing: -0.04em;

            .mobile-links {
                margin-top: 1em;
                ul {
                    display: flex;
                    flex-direction: column;
                    align-items: flex-start;
                    justify-content: flex-start;
                    gap: 0.5em;
                }
                #mobile-link {
                    font-size: 3rem;
                    font-weight: bold;
                }
            }

            .btn-mobile-menu {
                position: relative;
                display: flex;
                width: 100%;
                align-items: flex-end;
                justify-content: flex-end;
            }
        }

        .circle_image {
            width: 100%;
            max-width: 53px;
            transition: all 0.2s ease;
            a {
                display: flex;
                flex-direction: row;
                align-items: center;
                justify-content: flex-start;
                gap: 1em;
            }
            &:hover {
                opacity: 0.5;
                transform: scale(0.99);
            }
        }
    }

    /* ======================== Media Queries ======================== */
    @media (width <= 768px) {
        .navbar {
            width: 90%;
            .links {
                display: none;
            }
            .contact-button {
                display: none;
            }
            /* ===== Mobile Menu ===== */
            .mobile-menu {
                display: block;
            }
        }
    }
    @media (width <= 1024px) {
        .navbar {
            width: 90%;
        }
    }
</style>

<script>
    const openMobileBtn = document.getElementById('openBtn');
    const closeMobileBtn = document.getElementById('closeBtn');
    const mobileMenuSlide = document.getElementById('mobile-menu-slide');
    // const mobileLinks = document.querySelectorAll(`[data-name="mobile-link"]`);
    
    // mobileLinks.forEach(element => {
    //     element.addEventListener('click', () => closeMobile());
    // });

    openMobileBtn?.addEventListener('click', () => openMobile());
    closeMobileBtn?.addEventListener('click', () => closeMobile());

    // Functions
    function openMobile() {
        mobileMenuSlide!.style.height = '100%';
        mobileMenuSlide!.style.paddingTop = '54px';
    }
    function closeMobile() {
        mobileMenuSlide!.style.height = '0%';
        mobileMenuSlide!.style.paddingTop = '0px';
    }
</script>